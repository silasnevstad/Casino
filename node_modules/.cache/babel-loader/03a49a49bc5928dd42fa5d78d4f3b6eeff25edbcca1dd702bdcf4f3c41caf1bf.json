{"ast":null,"code":"export const shuffleDeck = deck => {\n  for (let i = 0; i < deck.length; i++) {\n    const randomIndex = Math.floor(Math.random() * deck.length);\n    const temp = deck[i];\n    deck[i] = deck[randomIndex];\n    deck[randomIndex] = temp;\n  }\n  return deck;\n};\nexport const getDeck = function () {\n  let numberOfDecks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3;\n  const suits = [\"hearts\", \"diamonds\", \"clubs\", \"spades\"];\n  const values = [\"A\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\"];\n  const newDeck = [];\n  for (let i = 0; i < numberOfDecks; i++) {\n    for (let suit of suits) {\n      for (let value of values) {\n        newDeck.push({\n          value,\n          suit\n        });\n      }\n    }\n  }\n  return newDeck;\n};\nexport const getCardValue = card => {\n  if (!card || !card.value) {\n    return 0;\n  }\n  const {\n    value\n  } = card;\n  if ([\"J\", \"Q\", \"K\"].includes(value)) {\n    return 10;\n  }\n  if (value === \"A\") {\n    return 11;\n  }\n  return parseInt(value);\n};\nexport const getHandValue = hand => {\n  let score = 0;\n  let hasAce = false;\n  for (let card of hand) {\n    const cardValue = getCardValue(card);\n    if (cardValue === 11) {\n      hasAce = true;\n    }\n    score += cardValue;\n  }\n  if (hasAce && score > 21) {\n    score -= 10;\n  }\n  return score;\n};\nexport const getCardImage = card => {\n  let cardSuit = card.suit;\n  let cardValue = card.value;\n  if (cardValue == \"A\") {\n    cardValue = \"ace\";\n  } else if (cardValue == \"J\") {\n    cardValue = \"jack\";\n  } else if (cardValue == \"Q\") {\n    cardValue = \"queen\";\n  } else if (cardValue == \"K\") {\n    cardValue = \"king\";\n  }\n  const imagePath = `src/images/cards/${cardValue}_of_${cardSuit}.png`;\n  console.log(imagePath);\n  return imagePath;\n};","map":{"version":3,"names":["shuffleDeck","deck","i","length","randomIndex","Math","floor","random","temp","getDeck","numberOfDecks","suits","values","newDeck","suit","value","push","getCardValue","card","includes","parseInt","getHandValue","hand","score","hasAce","cardValue","getCardImage","cardSuit","imagePath","console","log"],"sources":["/Users/silasnevstad/Desktop/Everything/CurrentProjects/Casino/my-app/src/utils/deckUtils.js"],"sourcesContent":["export const shuffleDeck = (deck) => {\n  for (let i = 0; i < deck.length; i++) {\n    const randomIndex = Math.floor(Math.random() * deck.length);\n    const temp = deck[i];\n    deck[i] = deck[randomIndex];\n    deck[randomIndex] = temp;\n  }\n\n  return deck;\n};\n\n\nexport const getDeck = (numberOfDecks = 3) => {\n  const suits = [\"hearts\", \"diamonds\", \"clubs\", \"spades\"];\n  const values = [\"A\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\"];\n\n\n  const newDeck = [];\n\n  for (let i = 0; i < numberOfDecks; i++) {\n    for (let suit of suits) {\n      for (let value of values) {\n        newDeck.push({ value, suit });\n      }\n    }\n  }\n\n  return newDeck;\n}\n\nexport const getCardValue = (card) => {\n  if (!card || !card.value) {\n    return 0;\n  }\n\n  const { value } = card;\n\n  if ([\"J\", \"Q\", \"K\"].includes(value)) {\n    return 10;\n  }\n\n  if (value === \"A\") {\n    return 11;\n  }\n\n  return parseInt(value);\n}\n\nexport const getHandValue = (hand) => {\n  let score = 0;\n  let hasAce = false;\n\n  for (let card of hand) {\n    const cardValue = getCardValue(card);\n\n    if (cardValue === 11) {\n      hasAce = true;\n    }\n\n    score += cardValue;\n  }\n\n  if (hasAce && score > 21) {\n    score -= 10;\n  }\n\n  return score;\n}\n\nexport const getCardImage = (card) => {\n  let cardSuit = card.suit;\n  let cardValue = card.value;\n  if (cardValue == \"A\") {\n    cardValue = \"ace\";\n  } else if (cardValue == \"J\") {\n    cardValue = \"jack\";\n  } else if (cardValue == \"Q\") {\n    cardValue = \"queen\";\n  } else if (cardValue == \"K\") {\n    cardValue = \"king\";\n  }\n\n  const imagePath = `src/images/cards/${cardValue}_of_${cardSuit}.png`;\n  console.log(imagePath);\n  return imagePath;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}