{"ast":null,"code":"import deck from './deck';\nexport const shuffleDeck = () => {\n  const newDeck = [...deck];\n  for (let i = newDeck.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [newDeck[i], newDeck[j]] = [newDeck[j], newDeck[i]];\n  }\n  return newDeck;\n};\nfunction getDeck() {\n  const suits = [\"hearts\", \"diamonds\", \"clubs\", \"spades\"];\n  const values = [\"A\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\"];\n  const deck = [];\n  for (let suit of suits) {\n    for (let value of values) {\n      deck.push({\n        suit,\n        value\n      });\n    }\n  }\n  return deck;\n}\nexport const dealCard = deck => {\n  return {\n    card: deck[0],\n    remainingDeck: deck.slice(1)\n  };\n};\nexport const calculateHandScore = hand => {\n  let score = 0;\n  let hasAce = false;\n  for (let i = 0; i < hand.length; i++) {\n    const card = hand[i];\n    if (card.rank === 'A') {\n      score += 11;\n      hasAce = true;\n    } else if (['K', 'Q', 'J'].includes(card.rank)) {\n      score += 10;\n    } else {\n      score += parseInt(card.rank);\n    }\n  }\n  if (score > 21 && hasAce) {\n    score -= 10;\n  }\n  return score;\n};","map":{"version":3,"names":["deck","shuffleDeck","newDeck","i","length","j","Math","floor","random","getDeck","suits","values","suit","value","push","dealCard","card","remainingDeck","slice","calculateHandScore","hand","score","hasAce","rank","includes","parseInt"],"sources":["/Users/silasnevstad/Desktop/Everything/CurrentProjects/Casino/my-app/src/utils/deckUtils.js"],"sourcesContent":["import deck from './deck';\n\nexport const shuffleDeck = () => {\n  const newDeck = [...deck];\n  for (let i = newDeck.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [newDeck[i], newDeck[j]] = [newDeck[j], newDeck[i]];\n  }\n  return newDeck;\n};\n\nfunction getDeck() {\n  const suits = [\"hearts\", \"diamonds\", \"clubs\", \"spades\"];\n  const values = [\"A\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\"];\n\n  const deck = [];\n\n  for (let suit of suits) {\n    for (let value of values) {\n      deck.push({ suit, value });\n    }\n  }\n\n  return deck;\n}\n\nexport const dealCard = deck => {\n  return { card: deck[0], remainingDeck: deck.slice(1) };\n};\n\nexport const calculateHandScore = hand => {\n  let score = 0;\n  let hasAce = false;\n  for (let i = 0; i < hand.length; i++) {\n    const card = hand[i];\n    if (card.rank === 'A') {\n      score += 11;\n      hasAce = true;\n    } else if (['K', 'Q', 'J'].includes(card.rank)) {\n      score += 10;\n    } else {\n      score += parseInt(card.rank);\n    }\n  }\n  if (score > 21 && hasAce) {\n    score -= 10;\n  }\n  return score;\n};\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,QAAQ;AAEzB,OAAO,MAAMC,WAAW,GAAG,MAAM;EAC/B,MAAMC,OAAO,GAAG,CAAC,GAAGF,IAAI,CAAC;EACzB,KAAK,IAAIG,CAAC,GAAGD,OAAO,CAACE,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC3C,MAAME,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7C,CAACD,OAAO,CAACC,CAAC,CAAC,EAAED,OAAO,CAACG,CAAC,CAAC,CAAC,GAAG,CAACH,OAAO,CAACG,CAAC,CAAC,EAAEH,OAAO,CAACC,CAAC,CAAC,CAAC;EACrD;EACA,OAAOD,OAAO;AAChB,CAAC;AAED,SAASO,OAAO,GAAG;EACjB,MAAMC,KAAK,GAAG,CAAC,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,CAAC;EACvD,MAAMC,MAAM,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAEjF,MAAMX,IAAI,GAAG,EAAE;EAEf,KAAK,IAAIY,IAAI,IAAIF,KAAK,EAAE;IACtB,KAAK,IAAIG,KAAK,IAAIF,MAAM,EAAE;MACxBX,IAAI,CAACc,IAAI,CAAC;QAAEF,IAAI;QAAEC;MAAM,CAAC,CAAC;IAC5B;EACF;EAEA,OAAOb,IAAI;AACb;AAEA,OAAO,MAAMe,QAAQ,GAAGf,IAAI,IAAI;EAC9B,OAAO;IAAEgB,IAAI,EAAEhB,IAAI,CAAC,CAAC,CAAC;IAAEiB,aAAa,EAAEjB,IAAI,CAACkB,KAAK,CAAC,CAAC;EAAE,CAAC;AACxD,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAGC,IAAI,IAAI;EACxC,IAAIC,KAAK,GAAG,CAAC;EACb,IAAIC,MAAM,GAAG,KAAK;EAClB,KAAK,IAAInB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiB,IAAI,CAAChB,MAAM,EAAED,CAAC,EAAE,EAAE;IACpC,MAAMa,IAAI,GAAGI,IAAI,CAACjB,CAAC,CAAC;IACpB,IAAIa,IAAI,CAACO,IAAI,KAAK,GAAG,EAAE;MACrBF,KAAK,IAAI,EAAE;MACXC,MAAM,GAAG,IAAI;IACf,CAAC,MAAM,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAACE,QAAQ,CAACR,IAAI,CAACO,IAAI,CAAC,EAAE;MAC9CF,KAAK,IAAI,EAAE;IACb,CAAC,MAAM;MACLA,KAAK,IAAII,QAAQ,CAACT,IAAI,CAACO,IAAI,CAAC;IAC9B;EACF;EACA,IAAIF,KAAK,GAAG,EAAE,IAAIC,MAAM,EAAE;IACxBD,KAAK,IAAI,EAAE;EACb;EACA,OAAOA,KAAK;AACd,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}