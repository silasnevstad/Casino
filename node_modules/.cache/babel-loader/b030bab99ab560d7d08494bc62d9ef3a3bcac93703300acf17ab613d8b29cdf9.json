{"ast":null,"code":"import { getDeck } from '../utils/deckUtils';\nconst initialState = {\n  balance: 1000,\n  bet: 0,\n  dealerHand: [],\n  playerHand: [],\n  currentDealerScore: 0,\n  currentPlayerScore: 0,\n  gameStage: 'ready',\n  deck: []\n};\nconst gameReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'SET_BET':\n      return {\n        ...state,\n        bet: action.payload\n      };\n    case 'DEAL_CARDS':\n      return {\n        ...state,\n        dealerHand: action.payload.dealerHand,\n        playerHand: action.payload.playerHand,\n        currentDealerScore: action.payload.currentDealerScore,\n        currentPlayerScore: action.payload.currentPlayerScore,\n        gameStage: 'inProgress',\n        deck: action.payload.newDeck\n      };\n    case 'HIT':\n      return {\n        ...state,\n        playerHand: [...state.playerHand, action.payload.card],\n        currentPlayerScore: action.payload.score\n      };\n    case 'BUST':\n      return {\n        ...state,\n        gameStage: 'result'\n      };\n    case 'UPDATE_DECK':\n      return {\n        ...state,\n        deck: action.payload\n      };\n    case 'STAND':\n      return {\n        ...state,\n        dealerHand: action.payload.hand,\n        currentDealerScore: action.payload.score,\n        gameStage: 'result'\n      };\n    case 'RESET_GAME':\n      return {\n        ...initialState,\n        deck: getDeck()\n      };\n    default:\n      return state;\n  }\n};\nexport default gameReducer;","map":{"version":3,"names":["getDeck","initialState","balance","bet","dealerHand","playerHand","currentDealerScore","currentPlayerScore","gameStage","deck","gameReducer","state","action","type","payload","newDeck","card","score","hand"],"sources":["/Users/silasnevstad/Desktop/Everything/CurrentProjects/Casino/my-app/src/reducers/gameReducer.js"],"sourcesContent":["import { getDeck } from '../utils/deckUtils';\n\nconst initialState = {\n  balance: 1000,\n  bet: 0,\n  dealerHand: [],\n  playerHand: [],\n  currentDealerScore: 0,\n  currentPlayerScore: 0,\n  gameStage: 'ready',\n  deck: []\n};\n\nconst gameReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_BET':\n      return {\n        ...state,\n        bet: action.payload\n      };\n    case 'DEAL_CARDS':\n      return {\n        ...state,\n        dealerHand: action.payload.dealerHand,\n        playerHand: action.payload.playerHand,\n        currentDealerScore: action.payload.currentDealerScore,\n        currentPlayerScore: action.payload.currentPlayerScore,\n        gameStage: 'inProgress',\n        deck: action.payload.newDeck\n      };\n    case 'HIT':\n      return {\n        ...state,\n        playerHand: [...state.playerHand, action.payload.card],\n        currentPlayerScore: action.payload.score\n      };\n    case 'BUST':\n      return {\n        ...state,\n        gameStage: 'result'\n      };\n    case 'UPDATE_DECK':\n      return {\n        ...state,\n        deck: action.payload\n      };\n    case 'STAND':\n      return {\n        ...state,\n        dealerHand: action.payload.hand,\n        currentDealerScore: action.payload.score,\n        gameStage: 'result'\n      };\n    case 'RESET_GAME':\n      return {\n        ...initialState,\n        deck: getDeck(),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default gameReducer;\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,oBAAoB;AAE5C,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,IAAI;EACbC,GAAG,EAAE,CAAC;EACNC,UAAU,EAAE,EAAE;EACdC,UAAU,EAAE,EAAE;EACdC,kBAAkB,EAAE,CAAC;EACrBC,kBAAkB,EAAE,CAAC;EACrBC,SAAS,EAAE,OAAO;EAClBC,IAAI,EAAE;AACR,CAAC;AAED,MAAMC,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGV,YAAY;EAAA,IAAEW,MAAM;EAC/C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,SAAS;MACZ,OAAO;QACL,GAAGF,KAAK;QACRR,GAAG,EAAES,MAAM,CAACE;MACd,CAAC;IACH,KAAK,YAAY;MACf,OAAO;QACL,GAAGH,KAAK;QACRP,UAAU,EAAEQ,MAAM,CAACE,OAAO,CAACV,UAAU;QACrCC,UAAU,EAAEO,MAAM,CAACE,OAAO,CAACT,UAAU;QACrCC,kBAAkB,EAAEM,MAAM,CAACE,OAAO,CAACR,kBAAkB;QACrDC,kBAAkB,EAAEK,MAAM,CAACE,OAAO,CAACP,kBAAkB;QACrDC,SAAS,EAAE,YAAY;QACvBC,IAAI,EAAEG,MAAM,CAACE,OAAO,CAACC;MACvB,CAAC;IACH,KAAK,KAAK;MACR,OAAO;QACL,GAAGJ,KAAK;QACRN,UAAU,EAAE,CAAC,GAAGM,KAAK,CAACN,UAAU,EAAEO,MAAM,CAACE,OAAO,CAACE,IAAI,CAAC;QACtDT,kBAAkB,EAAEK,MAAM,CAACE,OAAO,CAACG;MACrC,CAAC;IACH,KAAK,MAAM;MACT,OAAO;QACL,GAAGN,KAAK;QACRH,SAAS,EAAE;MACb,CAAC;IACH,KAAK,aAAa;MAChB,OAAO;QACL,GAAGG,KAAK;QACRF,IAAI,EAAEG,MAAM,CAACE;MACf,CAAC;IACH,KAAK,OAAO;MACV,OAAO;QACL,GAAGH,KAAK;QACRP,UAAU,EAAEQ,MAAM,CAACE,OAAO,CAACI,IAAI;QAC/BZ,kBAAkB,EAAEM,MAAM,CAACE,OAAO,CAACG,KAAK;QACxCT,SAAS,EAAE;MACb,CAAC;IACH,KAAK,YAAY;MACf,OAAO;QACL,GAAGP,YAAY;QACfQ,IAAI,EAAET,OAAO;MACf,CAAC;IACH;MACE,OAAOW,KAAK;EAAC;AAEnB,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}