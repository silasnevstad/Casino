{"ast":null,"code":"import strategyChart from '../utils/strategyChart';\nimport { getCardValue, getHandValue } from '../utils/deckUtils';\nexport const getOptimalMove = (dealerCard, playerHand) => {\n  const playerScore = getHandValue(playerHand);\n  const isSoft = playerHand.some(card => card.value === 'A');\n  const isPair = playerHand.length === 2 && playerHand[0].value === playerHand[1].value;\n  const isHard = !isSoft && !isPair;\n  if (isSoft) {\n    return strategyChart['soft'][playerScore][getCardValue(dealerCard)];\n  } else if (isPair) {\n    const score = playerHand[0].value === 'A' ? 13 : playerScore;\n    return strategyChart['pair'][score][getCardValue(dealerCard)];\n  } else if (isHard) {\n    return strategyChart['hard'][playerScore][getCardValue(dealerCard)];\n  }\n};\nexport const getCardImage = card => {\n  let cardSuit = card.suit;\n  let cardValue = card.value;\n  if (cardValue === \"A\") {\n    cardValue = \"ace\";\n  } else if (cardValue === \"J\") {\n    cardValue = \"jack\";\n  } else if (cardValue === \"Q\") {\n    cardValue = \"queen\";\n  } else if (cardValue === \"K\") {\n    cardValue = \"king\";\n  }\n  const imagePath = `/newcards/${cardValue}_of_${cardSuit}.png`;\n  return imagePath;\n};","map":{"version":3,"names":["strategyChart","getCardValue","getHandValue","getOptimalMove","dealerCard","playerHand","playerScore","isSoft","some","card","value","isPair","length","isHard","score","getCardImage","cardSuit","suit","cardValue","imagePath"],"sources":["/Users/silasnevstad/Desktop/Everything/CurrentProjects/Casino/my-app/src/utils/utils.js"],"sourcesContent":["import strategyChart from '../utils/strategyChart';\nimport { getCardValue, getHandValue } from '../utils/deckUtils';\n\nexport const getOptimalMove = (dealerCard, playerHand) => {\n    const playerScore = getHandValue(playerHand);\n    const isSoft = playerHand.some(card => card.value === 'A');\n    const isPair = playerHand.length === 2 && playerHand[0].value === playerHand[1].value;\n    const isHard = !isSoft && !isPair;\n\n    if (isSoft) {\n        return strategyChart['soft'][playerScore][getCardValue(dealerCard)];\n    } else if (isPair) {\n        const score = playerHand[0].value === 'A' ? 13 : playerScore;\n        return strategyChart['pair'][score][getCardValue(dealerCard)];\n    } else if (isHard) {\n        return strategyChart['hard'][playerScore][getCardValue(dealerCard)];\n    }\n}\n\nexport const getCardImage = (card) => {\n    let cardSuit = card.suit;\n    let cardValue = card.value;\n    if (cardValue === \"A\") {\n      cardValue = \"ace\";\n    } else if (cardValue === \"J\") {\n      cardValue = \"jack\";\n    } else if (cardValue === \"Q\") {\n      cardValue = \"queen\";\n    } else if (cardValue === \"K\") {\n      cardValue = \"king\";\n    }\n  \n    const imagePath = `/newcards/${cardValue}_of_${cardSuit}.png`;\n    return imagePath;\n  };\n  "],"mappings":"AAAA,OAAOA,aAAa,MAAM,wBAAwB;AAClD,SAASC,YAAY,EAAEC,YAAY,QAAQ,oBAAoB;AAE/D,OAAO,MAAMC,cAAc,GAAG,CAACC,UAAU,EAAEC,UAAU,KAAK;EACtD,MAAMC,WAAW,GAAGJ,YAAY,CAACG,UAAU,CAAC;EAC5C,MAAME,MAAM,GAAGF,UAAU,CAACG,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,KAAK,KAAK,GAAG,CAAC;EAC1D,MAAMC,MAAM,GAAGN,UAAU,CAACO,MAAM,KAAK,CAAC,IAAIP,UAAU,CAAC,CAAC,CAAC,CAACK,KAAK,KAAKL,UAAU,CAAC,CAAC,CAAC,CAACK,KAAK;EACrF,MAAMG,MAAM,GAAG,CAACN,MAAM,IAAI,CAACI,MAAM;EAEjC,IAAIJ,MAAM,EAAE;IACR,OAAOP,aAAa,CAAC,MAAM,CAAC,CAACM,WAAW,CAAC,CAACL,YAAY,CAACG,UAAU,CAAC,CAAC;EACvE,CAAC,MAAM,IAAIO,MAAM,EAAE;IACf,MAAMG,KAAK,GAAGT,UAAU,CAAC,CAAC,CAAC,CAACK,KAAK,KAAK,GAAG,GAAG,EAAE,GAAGJ,WAAW;IAC5D,OAAON,aAAa,CAAC,MAAM,CAAC,CAACc,KAAK,CAAC,CAACb,YAAY,CAACG,UAAU,CAAC,CAAC;EACjE,CAAC,MAAM,IAAIS,MAAM,EAAE;IACf,OAAOb,aAAa,CAAC,MAAM,CAAC,CAACM,WAAW,CAAC,CAACL,YAAY,CAACG,UAAU,CAAC,CAAC;EACvE;AACJ,CAAC;AAED,OAAO,MAAMW,YAAY,GAAIN,IAAI,IAAK;EAClC,IAAIO,QAAQ,GAAGP,IAAI,CAACQ,IAAI;EACxB,IAAIC,SAAS,GAAGT,IAAI,CAACC,KAAK;EAC1B,IAAIQ,SAAS,KAAK,GAAG,EAAE;IACrBA,SAAS,GAAG,KAAK;EACnB,CAAC,MAAM,IAAIA,SAAS,KAAK,GAAG,EAAE;IAC5BA,SAAS,GAAG,MAAM;EACpB,CAAC,MAAM,IAAIA,SAAS,KAAK,GAAG,EAAE;IAC5BA,SAAS,GAAG,OAAO;EACrB,CAAC,MAAM,IAAIA,SAAS,KAAK,GAAG,EAAE;IAC5BA,SAAS,GAAG,MAAM;EACpB;EAEA,MAAMC,SAAS,GAAI,aAAYD,SAAU,OAAMF,QAAS,MAAK;EAC7D,OAAOG,SAAS;AAClB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}